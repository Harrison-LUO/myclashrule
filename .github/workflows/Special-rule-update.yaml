name: Special-rule-update
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "20 */6 * * *"

jobs:
  Update-Special-rule:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Update MyDirect.SERVER.list
        run: |
          if [ -f rules/MyDirect.SERVER.update.list ]; then
            cat rules/MyDirect.SERVER.update.list | while read line; do
              line=$(echo "$line" | tr -d '\r' | xargs)
              if [ -n "$line" ]; then
                if [[ "$line" == \#* ]]; then
                  continue
                fi
                if [[ "$line" =~ ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$ ]]; then
                  echo "IP-CIDR,$line/32,no-resolve" 
                elif [[ "$line" =~ ^[a-zA-Z0-9.-]+$ ]]; then
                  echo "DOMAIN-SUFFIX,$line"
                else 
                  echo "IP-CIDR6,$line/128,no-resolve" 
                fi
              fi
            done | sort -t, -k1,1 > rules/MyDirect.SERVER.list.new
            mv -f rules/MyDirect.SERVER.list.new rules/MyDirect.SERVER.list
            rm -rf rules/MyDirect.SERVER.update.list
          else
            echo "MyDirect.SERVER.update.list not found, skipping..."
          fi

      - name: Get MyDirect rules
        run: |
          cat rules/MyDirect.MANUAL.list rules/MyDirect.SERVER.list > rules/MyDirect.list.new
          mv -f rules/MyDirect.list.new rules/MyDirect.list

      - name: Update Reject.list
        run: |
          if  curl -f -s -o rules/pcdn.txt https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/refs/heads/master/discretion/pcdn.txt && [[ -s rules/pcdn.txt ]]; then
            cat rules/pcdn.txt | while read line; do
              line=$(echo "$line" | tr -d '\r' | xargs)
              if [ -n "$line" ]; then
                if [[ "$line" == \#* ]]; then
                  continue
                fi
                if [[ "$line" =~ ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$ ]]; then
                  echo "IP-CIDR,$line/32,no-resolve" 
                elif [[ "$line" =~ ^[a-zA-Z0-9.-]+$ ]]; then
                  echo "DOMAIN,$line"
                else 
                  echo "IP-CIDR6,$line/128,no-resolve" 
                fi
              fi
            done | sort -t, -k1,1 > rules/pcdn.list
            echo >> rules/pcdn.list
            if curl -f -s -o rules/httpdns.list https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/ruleset/HTTPDNS.Block.list && [[ -s rules/httpdns.list ]]; then
              echo >> rules/httpdns.list
              > rules/httpdns.list.tmp
              while read -r line; do
                if [[ "$line" == *"IP-CIDR"* ]] && [[ "$line" != *"no-resolve"* ]]; then
                  echo "$line,no-resolve" >> rules/httpdns.list.tmp
                else
                  echo "$line" >> rules/httpdns.list.tmp
                fi
              done < rules/httpdns.list
              cat rules/httpdns.list.tmp rules/pcdn.list > rules/ForcedReject.list.new
              mv -f rules/ForcedReject.list.new rules/ForcedReject.list
              rm -f rules/httpdns.list rules/httpdns.list.tmp
            else
              echo "Failed to download or empty httpdns.list, exiting."
            fi
            rm -rf rules/pcdn.list rules/pcdn.txt
          else
            echo "Failed to download or empty pcdn.txt, exiting."
          fi

      - name: Download MyProxy rules
        run: |
          if  curl -f -s -o rules/app/Docker.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Docker/Docker.list && [[ -s rules/app/Docker.list ]]; then
          echo >> rules/app/Docker.list
            cat rules/app/Docker.list rules/MyProxy.MANUAL.list > rules/MyProxy.list.new
            mv -f rules/MyProxy.list.new rules/MyProxy.list
            rm -f rules/app/Docker.list
          else
            echo "Failed to download or empty Docker.list, exiting."
          fi

      - name: Download USSpecial rules
        run: |
          if  curl -f -s -o rules/app/Copilot.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Copilot/Copilot.list && [[ -s rules/app/Copilot.list ]]; then
            echo "DOMAIN,designer.microsoft.com" >> rules/app/Copilot.list
            echo "DOMAIN-SUFFIX,githubcopilot.com" >> rules/app/Copilot.list
            echo "DOMAIN,copilot-telemetry.githubusercontent.com" >> rules/app/Copilot.list
            echo "DOMAIN-SUFFIX,copilot-telemetry.githubusercontent.com" >> rules/app/Copilot.list
            echo "PROCESS-NAME,com.microsoft.copilot" >> rules/app/Copilot.list
            echo "PROCESS-NAME-REGEX,com\.microsoft\.copilot" >> rules/app/Copilot.list
            echo "PROCESS-NAME-REGEX,^(?=.*microsoft)(?=.*copilot).*$" >> rules/app/Copilot.list
            echo >> rules/app/Copilot.list
            if  curl -f -s -o rules/app/Bing.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bing/Bing.list && [[ -s rules/app/Bing.list ]]; then
              echo >> rules/app/Bing.list
              if  curl -f -s -o rules/app/Edge.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/MicrosoftEdge/MicrosoftEdge.list && [[ -s rules/app/Edge.list ]]; then
                echo >> rules/app/Edge.list
                cat rules/app/Copilot.list rules/app/Bing.list rules/app/Edge.list rules/app/USSpecial.MANUAL.list > rules/app/USSpecial.list.new
                mv -f rules/app/USSpecial.list.new rules/app/USSpecial.list
                rm -f rules/app/Edge.list
              else
                echo "Failed to download or empty Edge.list, exiting."
              fi
              rm -f rules/app/Bing.list
            else
              echo "Failed to download or empty Bing.list, exiting."
            fi
            rm -f rules/app/Copilot.list
          else
            echo "Failed to download or empty Copilot.list, exiting."
          fi

      - name: Download Bilibili rules
        run: |
          if  curl -f -s -o rules/app/BiliBili.list.new https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/BiliBili/BiliBili.list && [[ -s rules/app/BiliBili.list.new ]]; then
            mv -f rules/app/BiliBili.list.new rules/app/BiliBili.list
          else
            echo "Failed to download or empty BiliBili.list, exiting."
          fi
      
      - name: Download Game rules
        run: |
          if  curl -f -s -o rules/app/Game.list.new https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game.list && [[ -s rules/app/Game.list.new ]]; then
            mv -f rules/app/Game.list.new rules/app/Game.list
          else
            echo "Failed to download or empty Game.list, exiting."
          fi

      - name: Download GameDLCN rules
        run: |
          if  curl -f -s -o rules/app/SteamCN.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/SteamCN/SteamCN.list && [[ -s rules/app/SteamCN.list ]]; then
            if curl -f -s -o rules/app/GameDownloadCN.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN.list && [[ -s rules/app/GameDownloadCN.list ]]; then
              echo >> rules/app/SteamCN.list
              echo >> rules/app/GameDownloadCN.list
              cat rules/app/SteamCN.list rules/app/GameDownloadCN.list rules/app/GameDLCN.MANUAL.list > rules/app/GameDLCN.list.new
              mv -f rules/app/GameDLCN.list.new rules/app/GameDLCN.list
              rm -f rules/app/GameDownloadCN.list
            else
              echo "Failed to download or empty GameDownloadCN.list, exiting."
            fi
            rm -f rules/app/SteamCN.list
          else
            echo "Failed to download or empty SteamCN.list, exiting."
          fi

      - name: Download GameDL rules
        run: |
          if  curl -f -s -o rules/app/GameDL.list.new https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/GameDownload/GameDownload.list && [[ -s rules/app/GameDL.list.new ]]; then
            mv -f rules/app/GameDL.list.new rules/app/GameDL.list
          else
            echo "Failed to download or empty GameDownload.list, exiting."
          fi
      
      - name: Download USAPP rules
        run: |
          files=(
            "TwitterAndX.list|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Twitter/Twitter.list"
            "GoogleVoice.list|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GoogleVoice/GoogleVoice.list"
            "Reddit.list|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Reddit/Reddit.list"
            "PayPal.list|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/PayPal/PayPal.list"
            "USMedia.list|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/USMedia/USMedia.list"
            "OpenAI.list|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.list"
            "Claude.list|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Claude/Claude.list"
            "Gemini.list|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Gemini/Gemini.list"
            "AIACL4SSR.list|https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/AI.list"
            "Dropbox.list|https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Dropbox/Dropbox.list"
          )
          downloaded_files=() 
          for entry in "${files[@]}"; do
            IFS='|' read -r filename url <<< "$entry"
            output_path="rules/app/${filename}"

            if ! curl -f -s -o "$output_path" "$url" || [[ ! -s "$output_path" ]]; then
              echo "::error::Failed to download or empty file: $filename"
              rm -f "${downloaded_files[@]}"
              exit 1
            fi

            echo >> "$output_path"
            downloaded_files+=("$output_path")
          done
          cat "${downloaded_files[@]}" rules/app/USAPP.MANUAL.list > rules/app/USAPP.list.new
          echo >> rules/app/USAPP.list.new
          mv -f rules/app/USAPP.list.new rules/app/USAPP.list
          rm -f "${downloaded_files[@]}"

      - name: Download SGAPP rules
        run: |
          cp rules/app/SGAPP.MANUAL.list rules/app/SGAPP.list.new
          mv -f rules/app/SGAPP.list.new rules/app/SGAPP.list

      - name: Download UKAPP rules
        run: |
          if  curl -f -s -o rules/app/UKMedia.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/UKMedia/UKMedia.list && [[ -s rules/app/UKMedia.list ]]; then
            echo >> rules/app/UKMedia.list
            cat rules/app/UKMedia.list rules/app/UKAPP.MANUAL.list > rules/app/UKAPP.list.new
            mv -f rules/app/UKAPP.list.new rules/app/UKAPP.list
            rm -f rules/app/UKMedia.list
          else
            echo "Failed to download or empty UKMedia.list, exiting."
          fi

      - name: Download NorthwestEuropeAPP rules
        run: |
          cp rules/app/NorthwestEurope.MANUAL.list rules/app/NorthwestEurope.list.new
          mv -f rules/app/NorthwestEurope.list.new rules/app/NorthwestEurope.list

      - name: Download JPAPP rules
        run: |
          cp rules/app/JPAPP.MANUAL.list rules/app/JPAPP.list.new
          mv -f rules/app/JPAPP.list.new rules/app/JPAPP.list

      # - name: Download HKAPP rules
      #   run: |
      #     if curl -f -s -o rules/app/HKV4.txt https://ispip.clang.cn/hk_cidr.txt && [[ -s rules/app/HKV4.txt ]]; then
      #       sed -i '/^[0-9.]\+\/[0-9]\+$/!d' rules/app/HKV4.txt
      #       sed -i 's/^/IP-CIDR,/' rules/app/HKV4.txt
      #       sed -i 's/$/,no-resolve/' rules/app/HKV4.txt
      #       echo >> rules/app/HKV4.txt
      #       if curl -f -s -o rules/app/HKV6.txt https://ispip.clang.cn/hk_ipv6.txt && [[ -s rules/app/HKV6.txt ]]; then
      #         sed -i '/^[0-9a-f:]\+\/[0-9]\+$/!d' rules/app/HKV6.txt
      #         sed -i 's/^/IP-CIDR6,/' rules/app/HKV6.txt
      #         sed -i 's/$/,no-resolve/' rules/app/HKV6.txt
      #         echo >> rules/app/HKV6.txt
      #         cat rules/app/HKV4.txt rules/app/HKV6.txt rules/app/HKAPP.MANUAL.list > rules/app/HKAPP.list.new
      #         mv -f rules/app/HKAPP.list.new rules/app/HKAPP.list
      #         rm -f rules/app/HKV4.txt rules/app/HKV6.txt
      #       else
      #         echo "Failed to download or empty hk_ipv6.txt, exiting."
      #       fi
      #     else
      #       echo "Failed to download or empty hk_cidr.txt, exiting."
      #     fi

      - name: Download HKAPP rules
        run: |
          cp -f rules/app/HKAPP.MANUAL.list rules/app/HKAPP.MANUAL.list.new
          mv -f rules/app/HKAPP.MANUAL.list.new rules/app/HKAPP.list

      - name: Download eBay rules
        run: |
          if  curl -f -s -o rules/app/eBay.list.new https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/eBay/eBay.list && [[ -s rules/app/eBay.list.new ]]; then
            echo "DOMAIN-KEYWORD,ebay" >> rules/app/eBay.list.new
            echo "DOMAIN-KEYWORD,e-bay" >> rules/app/eBay.list.new
            echo "DOMAIN-SUFFIX,perfdrive.com" >> rules/app/eBay.list.new
            echo "DOMAIN-SUFFIX,forter.com" >> rules/app/eBay.list.new
            echo "DOMAIN-KEYWORD,forter" >> rules/app/eBay.list.new
            mv -f rules/app/eBay.list.new rules/app/eBay.list
          else
            echo "Failed to download or empty eBay.list, exiting."
          fi

      - name: Download Telegram rules
        run: |
          if  curl -f -s -o rules/app/telegramcidr.txt https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/telegramcidr.txt && [[ -s rules/app/telegramcidr.txt ]]; then
            echo "" > rules/app/telegramcidr.list.new
            while IFS= read -r line; 
            do
              ip=$(echo $line | sed "s/  - '//" | sed "s/'//" | sed 's/-//g' | sed "s/'//g"| sed "s/ //g")
              if [[ $ip =~ .*:.* ]]
              then
                echo "IP-CIDR6,$ip,no-resolve" >> rules/app/telegramcidr.list.new
              else
                echo "IP-CIDR,$ip,no-resolve" >> rules/app/telegramcidr.list.new
              fi
            done < <(tail -n +2 rules/app/telegramcidr.txt)
            mv -f rules/app/telegramcidr.list.new rules/app/telegramcidr.list
            sed -i '/^$/d' rules/app/telegramcidr.list
            rm -f rules/app/telegramcidr.list.new rules/app/telegramcidr.txt
            if  curl -f -s -o rules/app/telegramdomain.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.list && [[ -s rules/app/telegramdomain.list ]]; then
              cat rules/app/telegramcidr.list rules/app/telegramdomain.list > rules/app/telegram.list.new
              mv -f rules/app/telegram.list.new rules/app/telegram.list
              rm -f rules/app/telegramcidr.list rules/app/telegramdomain.list
            else
              echo "Failed to download or empty telegramdomain.list, exiting."
            fi
          else
            echo "Failed to download or empty telegramcidr.txt, exiting."
          fi

      - name: Download AppleandIcloud rules
        run: |
          if curl -f -s -o rules/app/Apple.list.new https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple.list && [[ -s rules/app/Apple.list.new ]]; then
            mv -f rules/app/Apple.list.new rules/app/Apple.list
          else
            echo "Failed to download or empty Apple.list, exiting."
          fi

      - name: Download GoogleFCM rules
        run: |
          if curl -f -s -o rules/app/GoogleFCM.list.new https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GoogleFCM/GoogleFCM.list && [[ -s rules/app/GoogleFCM.list.new ]]; then
            echo "# Other" >> rules/app/GoogleFCM.list.new
            echo "PROCESS-NAME,com.google.android.gms" >> rules/app/GoogleFCM.list.new
            echo "PROCESS-NAME-REGEX,android\.gms" >> rules/app/GoogleFCM.list.new
            echo "DOMAIN-SUFFIX,mtalk4.google.com" >> rules/app/GoogleFCM.list.new
            echo "DOMAIN-SUFFIX,mtalk-staging.google.com" >> rules/app/GoogleFCM.list.new
            echo "DOMAIN-SUFFIX,mtalk-dev.google.com" >> rules/app/GoogleFCM.list.new
            mv -f rules/app/GoogleFCM.list.new rules/app/GoogleFCM.list
          else
            echo "Failed to download or empty GoogleFCM.list, exiting."
          fi

      - name: Download Google rules
        run: |
          if curl -f -s -o rules/app/Google.list.1 https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.list && [[ -s rules/app/Google.list.1 ]]; then
            echo >> rules/app/Google.list.1
            cat rules/app/Google.list.1 rules/app/Google.MANUAL.list > rules/app/Google.list.new
            mv -f rules/app/Google.list.new rules/app/Google.list
            rm -f rules/app/Google.list.1
          else
            echo "Failed to download or empty Google.list, exiting."
          fi

      - name: Download Youtube rules
        run: |
          if curl -f -s -o rules/app/Youtube.list.new https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.list && [[ -s rules/app/Youtube.list.new ]]; then
            mv -f rules/app/Youtube.list.new rules/app/Youtube.list
          else
            echo "Failed to download or empty Youtube.list, exiting."
          fi

      - name: Download Onedrive rules
        run: |
          if  curl -f -s -o rules/app/Onedrive.1.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OneDrive/OneDrive.list && [[ -s rules/app/Onedrive.1.list ]]; then
            echo >> rules/app/Onedrive.1.list
            if  curl -f -s -o rules/app/Onedrive.2.list https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/OneDrive.list && [[ -s rules/app/Onedrive.2.list ]]; then
              echo >> rules/app/Onedrive.2.list
              cat rules/app/Onedrive.1.list rules/app/Onedrive.2.list rules/app/Onedrive.MANUAL.list > rules/app/Onedrive.list.new
              echo >> rules/app/Onedrive.list.new
              mv -f rules/app/Onedrive.list.new rules/app/Onedrive.list
              rm -f rules/app/Onedrive.2.list
            else
            echo "Failed to download or empty ios_rule_script-onedrive.list, exiting."
            fi
            rm -f rules/app/Onedrive.1.list
          else
            echo "Failed to download or empty ACL4SSR-onedrive.list, exiting."
          fi

      - name: Download MicrosoftHA rules
        run: |
          cp -f rules/app/MicrosoftHA.MANUAL.list rules/app/MicrosoftHA.list.new
          echo >> rules/app/MicrosoftHA.list.new
          mv -f rules/app/MicrosoftHA.list.new rules/app/MicrosoftHA.list

      - name: Download Microsoft rules
        run: |
          if curl -f -s -o rules/app/Microsoft.1.list https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.list && [[ -s rules/app/Microsoft.1.list ]]; then
            echo >> rules/app/Microsoft.1.list
            cat rules/app/Microsoft.1.list rules/app/Microsoft.MANUAL.list > rules/app/Microsoft.list.new
            mv -f rules/app/Microsoft.list.new rules/app/Microsoft.list
            rm -f rules/app/Microsoft.1.list
          else
            echo "Failed to download or empty Microsoft.list, exiting."
          fi

      - name: Add changes to the repository
        run: |
          git add .
          git status

      - name: Commit and push changes
        run: |
          git commit -m "Special-rule-update" -a
          git push
